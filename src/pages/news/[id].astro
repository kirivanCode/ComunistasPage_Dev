---
import { getNews } from '../../firebase/getNews';
import { getComments } from '../../firebase/getComments';
import { getLikes } from '../../firebase/getLikes';
import Layout from '../../layouts/BlogPost.astro';
const { params, locals } = Astro;
const user = await locals.currentUser();
const userImage = user?.profileImageUrl || user?.imageUrl || null;
const newsId = params.id;

const allNews = await getNews();
const currentNews = allNews.find(n => n.id === newsId) as { id: string; title: string; content: string; autor: string; image: string } | undefined;

const commentsRaw = await getComments(newsId) as { id: string; usuario: string; mensaje: string; createdAt: number }[];
const comments = commentsRaw.sort((a, b) => a.createdAt - b.createdAt);


const likes = await getLikes(newsId);
const likeCount = Array.isArray(likes) ? likes.length : 0;



import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';


---

<html lang="es" class="scroll-smooth">
  <head>
    <BaseHead title={currentNews?.title ?? 'Sin t√≠tulo'} description={currentNews?.content?.slice(0, 150) ?? 'Sin descripci√≥n'} />
    <!-- Google Fonts Inter -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet" />

    <!-- Font Awesome CDN for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <style>
      /* Reset */
      * {
        box-sizing: border-box;
      }
      body, html {
        margin: 0; padding: 0; min-height: 100%;
        font-family: 'Inter', sans-serif;
        background: #fafafa;
        color: #262626;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
      #root {
        margin: 0 auto;
        background: white;
        border: 1px solid #dbdbdb;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        max-width: 600px;
        width: 100%;
        height: 100vh;
        overflow-y: auto;
      }

      /* Instagram style fixed header */
      header {
        position: sticky;
        top: 0;
        background: white;
        border-bottom: 1px solid #dbdbdb;
        height: 54px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0 16px;
        font-weight: 600;
        font-size: 1.25rem;
        z-index: 20;
      }
      header .logo {
        font-family: 'Segoe Script', cursive, monospace;
        font-size: 1.7rem;
        color: #262626;
        letter-spacing: 1.5px;
        user-select: none;
      }
      header .icon-button {
        font-size: 1.4rem;
        cursor: pointer;
        color: #262626;
        padding: 6px;
        border-radius: 50%;
        transition: background-color 0.2s ease;
      }
      header .icon-button:hover {
        background-color: #efefef;
      }

      main {
        flex-grow: 1;
        overflow-y: auto;
        padding-top: 8px; /* small padding below header */
      }
      main article.post {
        margin: 0;
        background: white;
        border: none;
        box-shadow: none;
      }
      .post-header {
        display: flex;
        align-items: center;
        padding: 12px 16px;
        gap: 12px;
      }
      .post-header .avatar {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background: #ccc;
        flex-shrink: 0;
      }
      .post-header .username {
        font-weight: 600;
        font-size: 1rem;
        color: #262626;
      }
      .post-image {
        width: 100%;
        display: block;
        object-fit: cover;
        max-height: 500px;
        border-top: 1px solid #dbdbdb;
        border-bottom: 1px solid #dbdbdb;
      }
      .post-content {
        padding: 12px 16px;
        font-size: 1rem;
        color: #262626;
        white-space: pre-wrap;
      }
      .post-actions {
        padding: 8px 16px;
        display: flex;
        align-items: center;
        gap: 16px;
      }
      .action-button {
        cursor: pointer;
        border: none;
        background: transparent;
        color: #262626;
        font-size: 1.6rem;
        display: flex;
        align-items: center;
        transition: color 0.3s ease;
      }
      .action-button.liked {
        color: #ed4956;
      }
      .action-button:hover {
        color: #ed4956;
      }
      .likes-count {
        padding: 0 16px 8px 16px;
        font-weight: 600;
        font-size: 0.9rem;
      }
      section.comments {
        padding: 0 16px 12px 16px;
        max-height: 190px;
        overflow-y: auto;
      }
      .comment {
        display: flex;
        align-items: flex-start;
        gap: 8px;
        margin-bottom: 12px;
      }
      .comment .avatar {
        width: 28px;
        height: 28px;
        border-radius: 50%;
        background: #ccc;
        flex-shrink: 0;
      }
      .comment .content {
        background: #f0f0f0;
        padding: 8px 12px;
        border-radius: 12px;
        font-size: 0.875rem;
        color: #262626;
        max-width: 270px;
        word-wrap: break-word;
      }
      .comment .username {
        font-weight: 600;
        margin-right: 6px;
      }
      form#comment-form {
        display: flex;
        gap: 8px;
        padding: 8px 16px 16px 16px;
        border-top: 1px solid #dbdbdb;
        background: white;
        position: sticky;
        bottom: 0;
        z-index: 10;
        max-width: 100%;
      }
      form#comment-form textarea {
        flex-grow: 1;
        resize: none;
        padding: 8px 12px;
        border-radius: 20px;
        border: 1px solid #dbdbdb;
        font-size: 0.9rem;
        font-family: 'Inter', sans-serif;
        height: 36px;
        line-height: 1.2;
        min-height: 36px;
      }
      form#comment-form button {
        background: none;
        border: none;
        color: #3897f0;
        font-size: 1.8rem;
        cursor: pointer;
        padding: 0;
        display: flex;
        align-items: center;
        transition: color 0.25s ease;
      }
      form#comment-form button:disabled {
        opacity: 0.5;
        cursor: default;
      }
      /* Scrollbar style */
      #root::-webkit-scrollbar,
      section.comments::-webkit-scrollbar {
        width: 6px;
      }
      #root::-webkit-scrollbar-thumb,
      section.comments::-webkit-scrollbar-thumb {
        background-color: rgba(0,0,0,0.1);
        border-radius: 3px;
      }

      /* Responsive Typography and Layout */
      @media (max-width: 600px) {
        #root {
          border: none;
          height: 100vh;
          max-width: 100%;
        }
        .post-image {
          max-height: none;
        }
        .comment .content {
          max-width: calc(100% - 40px);
        }
        form#comment-form {
          padding: 8px 12px 16px 12px;
        }
      }
      @media (min-width: 768px) {
        #root {
          max-width: 600px;
          height: 100vh;
        }
        header {
          font-size: 1.75rem;
        }
      }
    </style>
  </head>
  <body class="bg-gray-50 text-gray-900 font-sans">
  <Header />

  <main class="max-w-3xl mx-auto px-4 py-12">
    <article class="bg-white p-6 rounded-xl shadow-md mb-10">
      <h1 class="text-3xl font-bold mb-4">{currentNews?.title}</h1>
      <img src={currentNews?.image} alt={currentNews?.title} class="w-full h-auto rounded-lg mb-4" />
      <p class="text-lg leading-relaxed mb-4">{currentNews?.content}</p>
      <p class="text-sm text-gray-600"><strong>Autor:</strong> {currentNews?.autor ?? 'An√≥nimo'}</p>
    </article>

    <!-- Likes -->
    <section class="post-actions" aria-label="Post actions">
      <h2 class="text-xl font-semibold mb-2">üëç Likes: <span id="like-count" class="text-blue-600">{likeCount}</span></h2>
      <form id="like-form" class="flex items-center gap-4">
        <button id="like-button" class="action-button" aria-pressed="false" aria-label="Like button" type="submit">
              <i class="fa-regular fa-heart"></i>
            </button>
        <input type="hidden" name="newsId" value={newsId} />
        <input type="hidden" name="userId" value={user.id} />
         
      </form>

      </section>

      <section class="max-w-3xl mx-auto mt-8 bg-white p-6 rounded-lg shadow-md">
  <h2 class="text-xl font-semibold mb-4">üó®Ô∏è Comentarios</h2>
  
  
    
  </form>
  <ul id="comments" class="space-y-2">
  {comments.map(comment => (
    <li class="flex items-start pb-2">
      <div class="comment-avatar w-8 h-8 rounded-full bg-gray-300 flex-shrink-0 mr-2"></div>
      <div class="comment-content bg-gray-100 p-2 rounded-lg">
        <strong class="comment-username">{comment.usuario}</strong>: {comment.mensaje}
      </div>
    </li>
  ))}
</ul>

<form id="comment-form" class="mb-4 space-y-4">
    <input type="hidden" name="newsId" value={newsId} />
    <input type="hidden" name="usuario" value={user.fullName} />
  <textarea name="mensaje" class="w-full border border-gray-300 rounded p-2" placeholder="Escribe un comentario..." required></textarea>
    <button type="submit" class="px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition">Enviar</button>
</section>

    <script type="module">
      const commentForm = document.getElementById('comment-form');
      const likeForm = document.getElementById('like-form');

      commentForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(commentForm);
        await fetch('/api/addComment', {
          method: 'POST',
          body: JSON.stringify({
            newsId: formData.get('newsId'),
            usuario: formData.get('usuario'),
            mensaje: formData.get('mensaje')
          }),
          headers: { 'Content-Type': 'application/json' }
        });
        location.reload();
      });

      likeForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(likeForm);
        const response = await fetch('/api/toggleLike', {
          method: 'POST',
          body: JSON.stringify({
            newsId: formData.get('newsId'),
            userId: formData.get('userId')
          }),
          headers: { 'Content-Type': 'application/json' }
        });
        const result = await response.json();
        const liked = result.liked;
        const countElement = document.getElementById('like-count');
        const currentCount = parseInt(countElement.textContent);
        countElement.textContent = currentCount + (liked ? 1 : -1);
      });
    </script>
  </body>
</html>


</head>

 <Footer />
